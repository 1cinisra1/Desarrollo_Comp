@model GPSMonitoreo.Web.ViewModels.AppLayoutForm
@{

	Layout = "~/Views/Shared/_AppLayoutTabbedForm.cshtml";

}

@*Script de incializacion*@
<script script-manager-add="commonform" script-manager-key="form_init">
	//console.log('options');
	//console.log(layout.options);

	//layout.options.disableTabsOnEditNew = true;
    

	function hideTabs() {
		layout.tabs.hideAt(1);
		layout.tabs.hideAt(2);
		layout.tabs.hideAt(3);
		layout.tabs.hideAt(4);
		layout.tabs.hideAt(5);
	};

	function showTabs() {
		layout.tabs.showAt(1);
		layout.tabs.showAt(2);
		layout.tabs.showAt(3);


		switch(layout.form.widgets.tipo.val())
		{
			case '1' ://empresa
				layout.tabs.showAt(4);
				layout.tabs.hideAt(5);
				break;

			case '4' : //persona
				layout.tabs.hideAt(4);
				layout.tabs.showAt(5);
				break;

			default:
				layout.tabs.hideAt(4);
				layout.tabs.hideAt(5);
				break;

		}

	};

	window.entidadShowtabs = showTabs;


	var $horarios_anios;

	layout.onEditStarted = function(response) {
		this.grids.direcciones.reload();
		this.grids.telefonos.reload();
		this.grids.emails.reload();
		this.grids.contactos.reload();
		this.grids.contactode.reload();
		showTabs();

		//form_horarios.horarios_anios.source(response.calendario_anos);

		console.log(response);

		$horarios_anios.jqxDropDownList({source: response.calendario_anos});
		


	};

	layout.onSaved = function() {
		showTabs();
	};

	layout.onEditNewStarted = function() {
		hideTabs();
	};

	layout.onLayoutLoaded = function() {
		hideTabs();
	};

	layout.addFormInitializer(function(form){
		var f = form.formElement;

		form.add(f.elements.alterno, 'jqxInput');

		var $categoria = form.add('#@(Model.FormId)_categoria', 'jqxTree', { height: 150, checkboxes: true, source: @Html.Raw(ViewData["categorias"])});
		var $tipo = $('#@(Model.FormId)_tipo');
		var $saludo = $('#@(Model.FormId)_saludo');
		var $profesion = $('#@(Model.FormId)_profesion');

		var $fila_razon_social  = $('#@(Model.FormId)_fila_razon_social');
		var $datos_persona = $('#@(Model.FormId)_datospersona');
		var $datos_identificacion = $('#@(Model.FormId)_datosidentificacion');
		var $datos_relacion_empresa = $('#@(Model.FormId)_seccion_relaciones');
		var $adicional_persona = $('#@(Model.FormId)_fila_infoadicionalpersona');

		//Componentes del tab de horarios:
		//Creación de un nuevo formulario dentro del formulario principal (definido a nivel de declaración de los tabs):
		var $form_horarios = $('#form_entidades_horarios').jqxForm();
		var form_horarios = $form_horarios.instance;
		
		$horarios_anios = $('#form_entidades_horarios_ano');

		var $horarios_tipos_dias = $('#form_entidades_horarios_tipo_dia');
		
		form_horarios.add($horarios_anios, 'jqxDropDownList', {placeHolder: ''});
		form_horarios.add($horarios_tipos_dias, 'jqxDropDownList', {placeHolder: ''});		

		$tipo.on('change', function(){
			console.log($tipo.val());

			var tipo = $tipo.val();

			//TODO: SE PUEDE OPTIMIZAR...
			switch(tipo){
				case '1': //juridico
					$datos_identificacion.css('display','');
					$fila_razon_social.css('display', '');
					$datos_persona.css('display', 'none');
					$datos_relacion_empresa.css('display','');
					$adicional_persona.css('display','none');
					break;

				case '2': //natural
					$datos_identificacion.css('display','');
					$fila_razon_social.css('display', 'none');
					$datos_persona.css('display', '');
					$datos_relacion_empresa.css('display','');
					$adicional_persona.css('display','none');
					break;

				case '3': //lugar
					$datos_identificacion.css('display','none');
					$fila_razon_social.css('display', 'none');
					$datos_persona.css('display', 'none');
					$datos_relacion_empresa.css('display','');
					$adicional_persona.css('display','none');
					break;

				case '4': //persona
					$datos_identificacion.css('display','');
					$fila_razon_social.css('display', 'none');
					$datos_persona.css('display', '');
					$datos_relacion_empresa.css('display','');
					$adicional_persona.css('display','');
					break;

				case '5': //empleado
					$datos_identificacion.css('display','');
					$fila_razon_social.css('display', 'none');
					$datos_persona.css('display', '');
					$datos_relacion_empresa.css('display','');
					$adicional_persona.css('display','none');
					break;
			}
		});

		form.add($tipo, 'jqxDropDownList', {placeHolder: '', source: @Html.Raw(ViewData["tipos"])});
		form.add($saludo, 'jqxDropDownList', {placeHolder: '', source: @Html.Raw(ViewData["saludos"])});
		form.add($profesion, 'jqxDropDownList', {placeHolder: '', source: @Html.Raw(ViewData["profesiones"])});


		//Agregando los elementos txt al form:
		form.add([f.elements.razon_social, f.elements.identificacion, f.elements.nombres, f.elements.apellidos], 'jqxInput');

		//Agregando el tipo identificación:
		form.add('#@(Model.FormId)_tipoiden', 'jqxDropDownList', {placeHolder: '', source: @Html.Raw(ViewData["tipoiden"])});

		//Agregando el listbox para la relación con empresas:
		form.add('#@(Model.FormId)_relaciones', 'jqxListBox', {width: "100%", checkboxes: true, source: @Html.Raw(ViewData["relaciones"])});

	});

	//DIRECCIONES
	layout.addGridInitializer(function(){
		var options = AppGrid.getDefaultOptions();

		options.elementId		= '#@(Model.FormId)_direcciones';


		options.showtoolbar		= true;
		options.showReloadButton= true;
		options.reloadMethod	= 	function(){
			var grid = this;
			App.get('/entidades/direccion/entidaddirecciones/' + layout.editingId, function(response){
				grid.grid.refreshLocalData(response.records);
			}, {async: true})
		};


		options.showAddButton	= true;
		options.addMethod = function(){
			App.loadLayoutEdit('/entidades/direccion/editform/' + layout.editingId, null, {
				tab_title: 'Edición dirección'
			}, {
				initialValues : {entidad: layout.editingId}
			});
		};

		options.showRowEditButton = true;
		options.editRowMethod = function(id, row){
			App.loadLayoutEdit('/entidades/direccion/editform/' + layout.editingId, id, {
				tab_title: 'Edición dirección'
			}, {
				initialValues : {entidad: layout.editingId}
			});
		};


		options.datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'descripcion', type: 'string'},
			{ name: 'ciudadela', type: 'string'},
			{ name: 'calle_principal', type: 'string' },
			{ name: 'calle_transversal', type: 'string'},
			{ name: 'numeracion', type: 'number'},
			{ name: 'codigo_postal', type: 'string'},
			{ name: 'pais', type: 'string'},
			{ name: 'provincia', type: 'string'},
			{ name: 'ciudad', type: 'string'}
		];

		options.columns = [
			{text: 'Cód. Int.', datafield: 'id', width: '60px'},
			{text: 'Descripción', datafield: 'descripcion', width: '150px'},
			{text: 'País', datafield: 'pais', width: '100px'},
			{text: 'Provincia', datafield: 'provincia', width: '100px'},
			{text: 'Ciudad', datafield: 'ciudad', width: '100px'},
			{text: 'Ciudadela', datafield: 'ciudadela', width: '100px'},
			{text: 'Calle Principal', datafield: 'calle_principal', width: '100px'},
			{text: 'Calle Transversal', datafield: 'calle_transversal', width: '100px'},
			{text: 'Numeración', datafield: 'numeracion', width: '50px'},
			{text: 'Cód. Postal', datafield: 'codigo_postal', width: '70px'}
		];


		return options;
	});

	//TELEFONOS
	layout.addGridInitializer(function(){
		var options = AppGrid.getDefaultOptions();

		options.elementId		= '#@(Model.FormId)_telefonos';

		var telefono_tipos = @Html.Raw(ViewData["telefono_tipos"]);


		options.editable = true;

		options.showtoolbar		= true;
		options.showReloadButton= true;
		options.reloadMethod	= 	function(){
			var grid = this;

			App.get('/entidades/entidad/telefonos/' + layout.editingId, function(response){
				grid.clearSelection();
				grid.grid.refreshLocalData(response.records);
			}, {async: true})

		};


		options.showAddButton	= true;
		options.addMethod		= function(){
			App.popupEdit2('/entidades/entidad/telefonoeditform/' + layout.editingId + '/0/0', {
				onSaved		: function() {
					layout.grids.telefonos.reload();
				},
				width		: 400,
				height		: 350
			});
		};

		options.showRowEditButton = true;
		options.editRowMethod = function(id, row){
			App.popupEdit2('/entidades/entidad/telefonoeditform/' + layout.editingId + '/0/0/' + id, {
				onSaved		: function() {
					layout.grids.telefonos.reload();
				},
				width		: 400,
				height		: 350
			});
		};


		options.datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'tipo', type: 'string'},
			{ name: 'codigo_pais', type: 'number' },
			{ name: 'codigo_area', type: 'number'},
			{ name: 'telefono', type: 'string'}

		];

		options.columns = [
			{text: 'Cód. Int.', datafield: 'id', width: '60px'},
			{text: 'Tipo', datafield: 'tipo', width: '250px'},
			{text: 'Cód Pais', datafield: 'codigo_pais', width: 70, cellsalign: 'left'},
			{text: 'Cód Area', datafield: 'codigo_area', width: 70, cellsalign: 'left'},
			{text: 'No. Teléfono', datafield: 'telefono', width: 150, cellsalign: 'left', columntype: 'textbox'}
		];


		return options;
	});


	//EMAILS
	layout.addGridInitializer(function(){
		var options = AppGrid.getDefaultOptions();

		options.elementId		= '#@(Model.FormId)_emails';



		options.showtoolbar		= true;
		options.showReloadButton= true;


		options.reloadMethod	= 	function(){
			var grid = this;
			App.get('/entidades/entidad/emails/' + layout.editingId, function(response){
				grid.grid.refreshLocalData(response.records);
			}, {async: true})
		};


		options.showAddButton	= true;

		options.addMethod		= function(){
			App.popupEdit2('/entidades/entidad/emaileditform/' + layout.editingId, {
				onSaved		: function() {
					layout.grids.emails.reload();
				},
				width		: 400,
				height		: 450
			});
		};




		options.showRowEditButton = true;
		options.editRowMethod = function(id, row){
			App.popupEdit2('/entidades/entidad/emaileditform/' + layout.editingId + '/' + id, {

				onSaved		: function() {
					layout.grids.emails.reload();
				},
				width		: 400,
				height		: 450
			});
		};

		options.datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'email', type: 'string'},
			{ name: 'tipo', type: 'string'}
		];

		options.columns = [
			{text: 'Cód. Int.', datafield: 'id', width: '60px'},
			{text: 'Email', datafield: 'email', width: '250px'},
			{text: 'Tipo', datafield: 'tipo', width: '150px'}
		];


		return options;
	});


	//CONTACTOS
	layout.addGridInitializer(function(){
		var options = AppGrid.getDefaultOptions();

		options.elementId		= '#@(Model.FormId)_contactos';


		options.showtoolbar		= true;
		options.showReloadButton= true;
		options.reloadMethod	= 	function(){
			var grid = this;
			App.get('/entidades/entidad/contactos/' + layout.editingId, function(response){
				grid.grid.refreshLocalData(response.records);
			}, {async: true})
		};


		options.showAddButton	= true;
		options.addMethod		= function(){
			App.popupEdit2('/entidades/entidad/contactoeditform/' + layout.editingId, {
				onSaved		: function() {
					layout.grids.contactos.reload();
				},
				width		: 700,
				height		: 650
			});
		};

		options.showRowEditButton = true;
		options.editRowMethod = function(id, row){
			App.popupEdit2('/entidades/entidad/contactoeditform/' + layout.editingId + '/' + id, {
				onSaved		: function() {
					layout.grids.contactos.reload();
				},
				width		: 700,
				height		: 650
			});
		};


		options.datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'persona_id', type: 'number' },
			{ name: 'apellidos', type: 'string'},
			{ name: 'nombres', type: 'string'},
			{ name: 'cargo', type: 'string'}
		];

		options.columns = [
			{text: 'Cód. Int.', datafield: 'id', width: '60px'},
			{text: 'Cód. Per.', datafield: 'persona_id', width: '60px'},
			{text: 'Apellidos', datafield: 'apellidos', width: '150px'},
			{text: 'Nombres', datafield: 'nombres', width: '150px'},
			{text: 'Cargo', datafield: 'cargo', width: '100px'}
		];
		return options;
	});


	//CONTACTO DE
	layout.addGridInitializer(function(){
		var options = AppGrid.getDefaultOptions();

		options.elementId		= '#@(Model.FormId)_contactode';


		options.showtoolbar		= true;
		options.showReloadButton= true;
		options.reloadMethod	= 	function(){
			var grid = this;
			App.get('/entidades/entidad/contactode/' + layout.editingId, function(response){
				grid.grid.refreshLocalData(response.records);
			}, {async: true})
		};


		options.showAddButton	= true;

		options.addMethod		= function(){
			App.popupEdit2('/entidades/entidad/contactodeeditform/' + layout.editingId, {
				onSaved		: function() {
					layout.grids.contactode.reload();
				},
				width		: 500,
				height		: 400
			});
		};

		options.showRowEditButton = true;
		options.editRowMethod = function(id, row){
			App.popupEdit2('/entidades/entidad/contactodeeditform/' + layout.editingId + '/' + id, {
				onSaved		: function() {
					layout.grids.contactode.reload();
				},
				width		: 500,
				height		: 400
			});
		};


		options.datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'descripcion', type: 'string'},
			{ name: 'razon_social', type: 'string'}
		];

		options.columns = [
			{text: 'Cód. Int.', datafield: 'id', width: '60px'},
			{text: 'Descripción', datafield: 'descripcion', width: '150px'},
			{text: 'Razón Social', datafield: 'razon_social', width: '250px'}
		];


		return options;
	});


	//HORARIO DE ATENCIÓN:
	layout.addGridInitializer(function(){
		var options = AppGrid.getDefaultOptions();

		options.elementId		= '#form_entidades_horarios_horarios';


		options.showtoolbar		= true;
		options.showReloadButton= true;
		options.reloadMethod	= 	function(){
			var grid = this;
			App.get('/entidades/entidad/horarios_atencion/' + layout.editingId, function(response){
				grid.grid.refreshLocalData(response.records);
			}, {async: true})
		};


		options.showAddButton	= true;

		options.addMethod		= function(){
			App.popupEdit2('/entidades/entidad/contactodeeditform/' + layout.editingId, {
				onSaved		: function() {
					layout.grids.contactode.reload();
				},
				width		: 500,
				height		: 400
			});
		};

		options.showRowEditButton = true;
		options.editRowMethod = function(id, row){
			App.popupEdit2('/entidades/entidad/contactodeeditform/' + layout.editingId + '/' + id, {
				onSaved		: function() {
					layout.grids.contactode.reload();
				},
				width		: 500,
				height		: 400
			});
		};


		options.datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'descripcion', type: 'string'},
			{ name: 'ano', type: 'string'},
			{ name: 'dia_tipo', type: 'string'},
			{ name: 'orden', type: 'number'},
			{ name: 'desde', type: 'string'},
			{ name: 'hasta', type: 'string'},
			{ name: 'observaciones', type: 'string'}
		];
		options.columns = [
			{text: 'Cód. Int.', datafield: 'id', width: '60px'},
			{text: 'Descripción', datafield: 'descripcion', width: '150px'},
			{text: 'Año', datafield: 'ano', width: '50px'},
			{text: 'Día Tipo', datafield: 'dia_tipo', width: '100px'},
			{text: 'Orden', datafield: 'orden', width: '50px'},
			{text: 'Desde', datafield: 'desde', width: '50px'},
			{text: 'Hasta', datafield: 'hasta', width: '50px'},
			{text: 'Observaciones', datafield: 'observaciones', width: '200px'}
		];

		return options;
	});


</script>

@*Manejo del tab direcciones*@
<formsection form-manager="commonform" form-manager-section="section1">
		<tr>
			<td>Código Alterno</td>
			<td><input type="text" name="alterno" maxlength="10" /></td>
			<td colspan="3"></td>
		</tr>
		<tr>
			<td>Tipo Entidad</td>
			<td>
				<div id="@(Model.FormId)_tipo" field_name="tipo"></div>
			</td>
			<td><input type="hidden" name="prueba"/></td>
		</tr>
		<tr>
			<td>Categoria</td>
			<td colspan="4">
				<div id="@(Model.FormId)_categoria" field_name="categoria"></div>
			</td>
		</tr>	
</formsection>

<formsection form-manager="commonform" form-manager-section="section2">
	
</formsection>

<formsection form-manager="commonform" form-manager-section="section3">
		<tbody class="tbody_group" id="@(Model.FormId)_datosidentificacion" style="display:none">
			<tr>
				<th colspan="5">IDENTIFICACION</th>
			</tr>
			<tr>
				<td>Tipo identificación</td>
				<td><div id="@(Model.FormId)_tipoiden" field_name="tipoiden"></div></td>
				<td></td>
				<td>Identificación</td>
				<td style="width:150px;"><input type="text" name="identificacion" maxlength="13" /></td>
			</tr>
			<tr id="@(Model.FormId)_fila_razon_social" style="display:none">
				<td style="width:150px;">Razón Social</td>
				<td colspan="4"><input type="text" name="razon_social" maxlength="100" /></td>
			</tr>
			<tr>
				<td colspan="5"></td>
			</tr>
		</tbody>

		<tbody class="tbody_group" id="@(Model.FormId)_datospersona" style="display:none">
			<tr>
				<th colspan="5">DATOS PERSONA</th>
			</tr>
			<tr>
				<td>Apellidos</td>
				<td colspan="4"><input type="text" name="apellidos" maxlength="150" /></td>
			</tr>
			<tr>
				<td>Nombres</td>
				<td colspan="4"><input type="text" name="nombres" maxlength="100" /></td>
			</tr>
			<tr id="@(Model.FormId)_fila_infoadicionalpersona" style="display:none">
				<td>Saludo</td>
				<td>
					<div id="@(Model.FormId)_saludo" field_name="saludo"></div>
				</td>
				<td></td>
				<td>Profesión</td>
				<td>
					<div id="@(Model.FormId)_profesion" field_name="profesion"></div>
				</td>
			</tr>
			<tr></tr>
			<tr>
				<td colspan="5"></td>
			</tr>
		 </tbody>

		<tbody class="tbody_group" id="@(Model.FormId)_seccion_relaciones" style="display:none">
			<tr>
				<th colspan="5">RELACIÓN EMPRESA</th>
			</tr>
			<tr>
				<td>Relación con la empresa</td>
				<td colspan="4">
					<div id="@(Model.FormId)_relaciones" field_name="relaciones" style="width:500px"></div>
				</td>
			</tr>
			<tr>
				@*Cada fila contiene 5 celdas para mantener la simetría*@
				@*Al hacer el colspan, internamente se hace un merge cells tal y como excel.*@
				<td></td>
				<td></td>
				<td></td>
				<td></td>
				<td></td>
			</tr>
		</tbody>
</formsection>


@section tabtitles{
			<li>Direcciones</li>
			<li>Teléfonos</li>
			<li>Emails</li>
			<li>Contactos</li>
			<li>Contacto De</li>
			<li>Horarios de Atención</li>
}

@section tabs{
			<div><div id="@(Model.FormId)_direcciones" field_name="direcciones"></div></div>
			<div><div id="@(Model.FormId)_telefonos" field_name="telefonos"></div></div>
			<div><div id="@(Model.FormId)_emails" field_name="emails"></div></div>
			<div><div id="@(Model.FormId)_contactos" field_name="contactos"></div></div>
			<div><div id="@(Model.FormId)_contactode" field_name="contactode"></div></div>
			<div>
				@*Definición del sub-formulario para el manejo de los horarios*@
				<form method="post" id="form_entidades_horarios">
					<formsection form-manager="commonform" form-manager-rendersection="section_top"></formsection>
					<table class="table_edit jqx-wide">
						<tbody>
							<tr>
								<td style="width:120px;">Años</td>
								<td style="width:150px;">
									<div id="form_entidades_horarios_ano" field_name="calendario_anos"></div>
								</td>
								<td style="width:10px;"></td>
								<td style="width:120px;"></td>
								<td style="width:150px;"></td>
							</tr>
							<tr>
								<td style="width:120px;">Tipo de día</td>
								<td style="width:150px;">
									<div id="form_entidades_horarios_tipo_dia" field_name="calendario_tipo_dias"></div>
								</td>
								<td style="width:10px;"></td>
								<td style="width:120px;"></td>
								<td style="width:150px;"></td>
							</tr>
						</tbody>
						<tbody class="tbody_group">
							<tr>
								<th colspan="5">CALENDARIOS</th>
							</tr>
							<tr>
								<td colspan="5">
									<div id="form_entidades_horarios_horarios" field_name="horarios"></div>
								</td>
							</tr>
						</tbody>
					</table>
				</form>

				
				
</div>
}
