@model GPSMonitoreo.Web.ViewComponents.Models.FormRelationalGridModel
@{

	//@model GPSMonitoreo.Web.ViewComponents.Models.FormRelationalGridModel

	//Layout = "~/Views/Shared/_TabbedLayoutForm.cshtml";
}
<script script-manager-add="commonform" script-manager-key="form_init2">
	var $grid = $form.find('#@(Model.FormId)_@Model.FieldName');
	var grid;

	var datafields = [
			{ name: 'id', type: 'number' },
			{ name: 'descripcion', type: 'string' }
        ];


	var source_grid = 
    {
        localdata: [],
        datatype: "array",
        datafields: datafields,
        deleterow: function (rowid, commit) {
            commit(true);
        },

        addrow: function (rowid, rowdata, position, commit) {
            commit(true);
        },
        updaterow: function (rowid, newdata, commit) {
            commit(true);
        }
    };

	var dataAdapter = new $.jqx.dataAdapter(source_grid);


	var createwidget = function (row, column, value, htmlElement) {
		$up = $('<webicon class="up-arrow-3 clickable"></webicon>');
		$down = $('<webicon class="down-arrow-3 clickable" style="margin-right:5px"></webicon>');

		var $element = $(htmlElement);
		$element.css('padding', '3px');
		$element.append($down);
		$element.append($up);


		$up.on('click', function(){
			var rowIndex = grid.getbuttonrowindex(this);

			if(rowIndex > 0)
			{
				var newRowData = grid.getcleanrowdata(rowIndex - 1);
				var newPrevRowData = grid.getcleanrowdata(rowIndex);
				grid.updaterow(rowIndex, newRowData);
				grid.updaterow(rowIndex - 1, newPrevRowData);
			}
		});

		$down.on('click', function(){
			var rowIndex = grid.getbuttonrowindex(this);
			if(rowIndex < grid.getdatainformation().rowscount-1)
			{
				var newRowData = grid.getcleanrowdata(rowIndex + 1);
				var newNextRowData = grid.getcleanrowdata(rowIndex);
				grid.updaterow(rowIndex, newRowData);
				grid.updaterow(rowIndex + 1, newNextRowData);
			}
		});
	};

	var initwidget = function(row, column, value, cellElement){

	};
	
	var columns = [
		{ text: 'Código interno', datafield: 'id', width: 80 },
		{ text: 'Descripcion', datafield: 'descripcion', width: 380},
		{ text: '', width: 100, createwidget: createwidget, initwidget: initwidget}
	];


	$grid.jqxGrid({
		width: '100%',
		height: 350,
		source: dataAdapter,
		selectionmode: 'checkbox',
		showtoolbar: true,
        columns: columns,

		rendertoolbar: function ($toolbar) {
			$add = $('<webicon class="placeholder-29 clickable"></webicon>');
			$delete = $('<webicon class="garbage-1 clickable"></webicon>');
			

			$toolbar_container = $('<div style="height:100%;padding:3px"></div>');
			$toolbar_container.append($add);
			$toolbar_container.append($delete);
			
			$toolbar.append($toolbar_container);

			$delete.click(function(){
				grid.removecheckedrows();
			});

			$add.click(function(){
				windowSearch(grid);
			});
        }
	});

	grid = $grid.data('jqxWidget');

	form.addWidget(grid);

	grid.customReset = function()
	{
		grid.updatebounddata();
	};


	grid.customVal = function(value, data)
	{
		if(value === undefined)
		{
			return this.getFieldValues('id');
		}
		else
		{
			this.clear();
			var keyForGrid = this._elementName + '_grid';
			if(data && data.hasOwnProperty(keyForGrid))
				this.refreshLocalData(data[keyForGrid]);
			else
				this.refreshLocalData(value);
		}
	};
</script>
<table class="table_edit jqx-wide" style="width:100%">
	<tbody class="tbody_group">
		<tr>
			<th colspan="5">@Model.Title</th>
		</tr>
		<tr>
			<td colspan="5">
				<div id="@(Model.FormId)_@Model.FieldName" field_name="@Model.FieldName"></div>
			</td>
		</tr>
	</tbody>
</table>
